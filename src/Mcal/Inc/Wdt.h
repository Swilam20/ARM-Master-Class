/**********************************************************************************************************************

 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  <Write File Name>
 *       Module:  -
 *
 *  Description:  <Write File DESCRIPTION here>     
 *  
 *********************************************************************************************************************/
#ifndef 	WDT_H
#define		WDT_H

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/
#define   STANDARD			0

#define	  NON_MASKABLE      1

/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/
#define		WDT1_BASE_ADDRESS		0x40001000
#define		WDTLOAD					0x0000
#define		WDTCTL 				    0x008
#define		WDTLOCK 			    0xC00
#define		LAST_BIT_MASK			0x80000000

#define GET_WDT_REG(Offset)      *((volatile uint32*)(WDT1_BASE_ADDRESS+Offset))
#define	WRC_IS_SET()			   (GET_WDT_REG(WDTCTL)&LAST_BIT_MASK)

#define WDT_CLOCK					16000
/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/
typedef struct{

	uint32	WdgInitialTimeout;
	uint32	WdgMaxTimeoutWDT ;
	uint8	interruptType;
}Wdt_ConfigType;

/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

 
/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/
/******************************************************************************
* \Syntax          : void Wdt_Init (const Gpt_ConfigType* ConfigPtr)
                                
* \Description     : Initializes the module.
*                                                       
*                                                                             
* \Sync\Async      : Synchronous                                               
* \Reentrancy      : Non Reentrant                                             
* \Parameters (in) : ConfigPtr |Pointer to configuration set |                
* \Parameters (out): None                                                      
* \Return value:   : None
*******************************************************************************/
void Wdg_Init( const Wdg_ConfigType* ConfigPtr)

/******************************************************************************
* \Syntax          : void Wdg_SetTriggerCondition( uint16 timeout )
                                
* \Description     :Sets the timeout value for the trigger counter
*                                                       
*                                                                             
* \Sync\Async      : Synchronous                                               
* \Reentrancy      : Non Reentrant                                             
* \Parameters (in) : timeout  |Timeout value (milliseconds) for setting the trigger counter. |       
* \Parameters (out): None                                                      
* \Return value:   : None
*******************************************************************************/
void Wdg_SetTriggerCondition( uint16 timeout )

 
#endif  /* WDT_H */

/**********************************************************************************************************************
 *  END OF FILE: Std_Types.h
 *********************************************************************************************************************/
